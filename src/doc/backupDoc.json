{
  "openapi": "3.0.0",
  "info": {
    "title": "Social Network API",
    "description": "Social Network API",
    "contact": {
      "email": "ivan.stesic@gmail.com"
    },
    "version": "1.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "API for authentication"
    }
  ],
  "servers": [
    {
      "url": "https://backend-social-network.herokuapp.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:5500",
      "description": "Development server"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["aplication/json"],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "description": "Register a new user",
        "parameters": [
          {
            "required": true,
            "in": "body",
            "name": "body",
            "description": "User Registration",
            "schema": {
              "$ref": "#definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration Token"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error_400"
            },
            "description": "400 Error"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/error_409"
            },
            "description": "409 Error"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/error_500"
            },
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "description": "User login",
        "parameters": [
          {
            "required": true,
            "in": "body",
            "name": "body",
            "description": "User Login",
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JWT Token"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error_400"
            },
            "description": "400 Error"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/error_404"
            },
            "description": "400 Error"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/error_500"
            },
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Register": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@gmail.com",
          "required": true
        },
        "password": {
          "type": "string",
          "minimum": 7,
          "example": "1234567",
          "required": true
        },
        "firstName": {
          "type": "string",
          "minimum": 2,
          "example": "John",
          "required": true
        },
        "lastName": {
          "type": "string",
          "minimum": 2,
          "example": "Smith",
          "required": true
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@gmail.com",
          "required": true
        },
        "password": {
          "type": "string",
          "minimum": 7,
          "example": "1234567",
          "required": true
        }
      }
    },
    "error_400": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Bad Request"
        }
      }
    },
    "error_404": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Not Found!"
        }
      }
    },
    "error_409": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Already exist"
        }
      }
    },
    "error_500": {
      "type": "string",
      "example": "Internal server error"
    }
  }
}
